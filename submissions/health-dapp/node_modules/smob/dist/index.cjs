"use strict";var t;function r(t){return!!t&&"object"==typeof t&&!Array.isArray(t)}function e(t){try{return JSON.stringify(t),!0}catch(t){return!1}}function n(t){return"__proto__"!==t&&"prototype"!==t&&"constructor"!==t}function i(t,e){if(Object.is(t,e))return!0;if(t instanceof Date&&e instanceof Date)return t.getTime()===e.getTime();if(t instanceof RegExp&&e instanceof RegExp)return t.toString()===e.toString();if(!r(t)||!r(e))return!1;const n=Reflect.ownKeys(t),o=Reflect.ownKeys(e);if(n.length!==o.length)return!1;for(let r=0;r<n.length;r++){const o=n[r];if(!Reflect.has(e,o)||!i(t[o],e[o]))return!1}return!0}function o(t){const r=[...t];for(let t=0;t<r.length;t++)for(let e=r.length-1;e>t;e--)i(r[t],r[e])&&r.splice(e,1);return r}function s(t,r,e){const n=t.concat(r);return e?o(n):n}function c(){return c=Object.assign||function(t){for(var r=1;r<arguments.length;r++){var e=arguments[r];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])}return t},c.apply(this,arguments)}function a(t,r){return Object.prototype.hasOwnProperty.call(t,r)}function f(t){var r,e;return(t=t||{}).array=null==(r=t.array)||r,t.arrayDistinct=null!=(e=t.arrayDistinct)&&e,t.priority=t.priority||exports.PriorityName.LEFT,t}function u(t,i,...o){if(!o.length)return i;const c=o.shift();if(r(i)&&r(c)){const o=Object.keys(c);for(let f=0;f<o.length;f++){const y=o[f];if(n(y))if(a(i,y)){if(t.strategy){if(void 0!==t.strategy(i,y,c[y]))continue}if(!e(c[y]))continue;if(r(i[y])&&r(c[y])){u(t,i[y],c[y]);continue}if(t.array&&Array.isArray(i[y])&&Array.isArray(c[y])){switch(t.priority){case exports.PriorityName.LEFT:Object.assign(i,{[y]:s(i[y],c[y],t.arrayDistinct)});break;case exports.PriorityName.RIGHT:Object.assign(i,{[y]:s(c[y],i[y],t.arrayDistinct)})}continue}t.priority===exports.PriorityName.RIGHT&&Object.assign(i,{[y]:c[y]})}else Object.assign(i,{[y]:c[y]})}}return u(t,i,...o)}function y(t){const r=f(t);return(t,...e)=>u(r,t,...e)}exports.PriorityName=void 0,(t=exports.PriorityName||(exports.PriorityName={})).LEFT="left",t.RIGHT="right";const p=y();exports.baseMerger=u,exports.buildOptions=f,exports.createMerger=y,exports.cutObject=function t(e,n){if(n<0)return{};const i=c({},e),o=Object.keys(i);for(let e=0;e<o.length;e++)r(i[o[e]])&&(i[o[e]]=t(i[o[e]],n-1));return i},exports.distinctArray=o,exports.hasOwnProperty=a,exports.isEqual=i,exports.isObject=r,exports.isSafeKey=n,exports.isSafeObject=e,exports.merge=p,exports.mergeArrays=s;
//# sourceMappingURL=index.cjs.map
